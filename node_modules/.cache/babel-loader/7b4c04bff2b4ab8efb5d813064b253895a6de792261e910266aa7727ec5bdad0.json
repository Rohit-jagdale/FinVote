{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/Desktop/projects/FinVote/src/components/Database.js\",\n  _s = $RefreshSig$();\n// import { startRegistration } from \"@simplewebauthn/browser\"\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Container, Header, Message, Table, Dropdown } from 'semantic-ui-react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Database() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [adharNumber, setAdharNumber] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [walletAddress, setWalletAddress] = useState(\"\"); // New state for MetaMask wallet address\n  const [submissionSuccess, setSubmissionSuccess] = useState(false);\n  const [submissionError, setSubmissionError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [showUsers, setShowUsers] = useState(false);\n  const areaOptions = [{\n    key: 'a',\n    text: 'Area 1',\n    value: 'Area 1'\n  }, {\n    key: 'b',\n    text: 'Area 2',\n    value: 'Area 2'\n  }, {\n    key: 'c',\n    text: 'Area 3',\n    value: 'Area 3'\n  }];\n\n  // const collectData = async (e) => {\n  //     e.preventDefault();\n\n  //     try {\n  //         const result = await axios.post('http://localhost:4000/', {\n  //             firstName,\n  //             lastName,\n  //             age,\n  //             adharNumber,\n  //             area,\n  //             walletAddress // Include wallet address in the post data\n  //         });\n\n  //         localStorage.setItem(\"user\", JSON.stringify(result.data));\n  //         setSubmissionSuccess(true);\n  //         setSubmissionError(null);\n  //     } \n  //     // try {\n  //     //     const result = await axios.post('https://finvote.onrender.com', {\n  //     //         firstName,\n  //     //         lastName,\n  //     //         age,\n  //     //         adharNumber,\n  //     //         area,\n  //     //         walletAddress // Include wallet address in the post data\n  //     //     });\n\n  //     //     localStorage.setItem(\"user\", JSON.stringify(result.data));\n  //     //     setSubmissionSuccess(true);\n  //     //     setSubmissionError(null);\n  //     // }\n  //     catch (error) {\n  //         console.error('Error submitting data:', error);\n  //         setSubmissionError('Error submitting data. Please try again.');\n  //     }\n  // };\n\n  async function startRegistration(options) {\n    const publicKey = {\n      challenge: options.challenge,\n      rp: {\n        name: options.rpName\n      },\n      user: {\n        id: new TextEncoder().encode(options.userID),\n        name: options.userName,\n        displayName: options.userName\n      },\n      pubKeyCredParams: [{\n        type: \"public-key\",\n        alg: -7\n      } // ECDSA with SHA-256\n      ],\n      authenticatorSelection: options.authenticatorSelection,\n      attestation: \"direct\"\n    };\n    const registration = await navigator.credentials.create({\n      publicKey\n    });\n    return registration;\n  }\n  const collectData = async e => {\n    e.preventDefault();\n    try {\n      // 1. Send user data to the server to create a user record\n      const userResponse = await axios.post('http://localhost:4000/', {\n        firstName,\n        lastName,\n        age,\n        adharNumber,\n        area,\n        walletAddress // Include wallet address in the post data\n      });\n\n      // Save the user data in localStorage\n      localStorage.setItem(\"user\", JSON.stringify(userResponse.data));\n\n      // 2. Initiate WebAuthn registration process\n      const initRegisterResponse = await axios.get(`http://localhost:4000/init-register?adharNumber=${adharNumber}`,\n      // Updated query parameter\n      {\n        withCredentials: true\n      });\n      if (!initRegisterResponse.data) {\n        throw new Error('Failed to fetch registration options from the server.');\n      }\n\n      // 3. Start WebAuthn registration\n      const registrationJSON = await startRegistration(initRegisterResponse.data);\n\n      // 4. Verify WebAuthn registration with the server\n      const verifyRegisterResponse = await axios.post('http://localhost:4000/verify-register', registrationJSON, {\n        withCredentials: true\n      });\n      if (verifyRegisterResponse.data.verified) {\n        setSubmissionSuccess(true);\n        setSubmissionError(null);\n        console.log('Successfully registered user:', verifyRegisterResponse.data);\n      } else {\n        throw new Error('WebAuthn registration verification failed.');\n      }\n    } catch (error) {\n      console.error('Error during registration process:', error);\n      setSubmissionError('Error during registration. Please try again.');\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/');\n      setUsers(response.data);\n      setShowUsers(true);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    text: true,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      secondary: true,\n      onClick: fetchUsers,\n      style: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        zIndex: 1000\n      },\n      children: \"Fetch Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), submissionSuccess && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"Submission Successful\",\n      content: \"Your data has been captured!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), submissionError && /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      header: \"Submission Error\",\n      content: submissionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: collectData,\n      size: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your first name\",\n          value: firstName,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your last name\",\n          value: lastName,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your age\",\n          value: age,\n          onChange: e => setAge(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Adhar Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your Adhar number\",\n          value: adharNumber,\n          onChange: e => setAdharNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Your Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select Area\",\n          fluid: true,\n          selection: true,\n          options: areaOptions,\n          onChange: (e, {\n            value\n          }) => setArea(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"MetaMask Wallet Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your wallet address\",\n          value: walletAddress,\n          onChange: e => setWalletAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        type: \"submit\",\n        style: {\n          marginTop: '10px',\n          borderRadius: '20px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), showUsers && users.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Adhar Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.adharNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.area\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: user.walletAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n_s(Database, \"z9b5m11T2bBHg+K2xPg1Xp6sBiI=\");\n_c = Database;\nexport default Database;\nvar _c;\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useState","axios","Button","Form","Container","Header","Message","Table","Dropdown","toast","ToastContainer","jsxDEV","_jsxDEV","Database","_s","firstName","setFirstName","lastName","setLastName","age","setAge","adharNumber","setAdharNumber","area","setArea","walletAddress","setWalletAddress","submissionSuccess","setSubmissionSuccess","submissionError","setSubmissionError","users","setUsers","showUsers","setShowUsers","areaOptions","key","text","value","startRegistration","options","publicKey","challenge","rp","name","rpName","user","id","TextEncoder","encode","userID","userName","displayName","pubKeyCredParams","type","alg","authenticatorSelection","attestation","registration","navigator","credentials","create","collectData","e","preventDefault","userResponse","post","localStorage","setItem","JSON","stringify","data","initRegisterResponse","get","withCredentials","Error","registrationJSON","verifyRegisterResponse","verified","console","log","error","fetchUsers","response","children","fileName","_jsxFileName","lineNumber","columnNumber","secondary","onClick","style","position","top","right","zIndex","as","textAlign","margin","success","header","content","onSubmit","size","Field","placeholder","onChange","target","fluid","selection","primary","marginTop","borderRadius","length","celled","Row","HeaderCell","Body","map","Cell","_id","_c","$RefreshReg$"],"sources":["/Users/rohit/Desktop/projects/FinVote/src/components/Database.js"],"sourcesContent":["// import { startRegistration } from \"@simplewebauthn/browser\"\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Container, Header, Message, Table, Dropdown } from 'semantic-ui-react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Database() {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [adharNumber, setAdharNumber] = useState(\"\");\n    const [area, setArea] = useState(\"\");\n    const [walletAddress, setWalletAddress] = useState(\"\"); // New state for MetaMask wallet address\n    const [submissionSuccess, setSubmissionSuccess] = useState(false);\n    const [submissionError, setSubmissionError] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [showUsers, setShowUsers] = useState(false);\n\n    const areaOptions = [\n        { key: 'a', text: 'Area 1', value: 'Area 1' },\n        { key: 'b', text: 'Area 2', value: 'Area 2' },\n        { key: 'c', text: 'Area 3', value: 'Area 3' }\n    ];\n\n    // const collectData = async (e) => {\n    //     e.preventDefault();\n        \n    //     try {\n    //         const result = await axios.post('http://localhost:4000/', {\n    //             firstName,\n    //             lastName,\n    //             age,\n    //             adharNumber,\n    //             area,\n    //             walletAddress // Include wallet address in the post data\n    //         });\n    \n    //         localStorage.setItem(\"user\", JSON.stringify(result.data));\n    //         setSubmissionSuccess(true);\n    //         setSubmissionError(null);\n    //     } \n    //     // try {\n    //     //     const result = await axios.post('https://finvote.onrender.com', {\n    //     //         firstName,\n    //     //         lastName,\n    //     //         age,\n    //     //         adharNumber,\n    //     //         area,\n    //     //         walletAddress // Include wallet address in the post data\n    //     //     });\n    \n    //     //     localStorage.setItem(\"user\", JSON.stringify(result.data));\n    //     //     setSubmissionSuccess(true);\n    //     //     setSubmissionError(null);\n    //     // }\n    //     catch (error) {\n    //         console.error('Error submitting data:', error);\n    //         setSubmissionError('Error submitting data. Please try again.');\n    //     }\n    // };\n\n    async function startRegistration(options) {\n        const publicKey = {\n          challenge: options.challenge,\n          rp: {\n            name: options.rpName\n          },\n          user: {\n            id: new TextEncoder().encode(options.userID),\n            name: options.userName,\n            displayName: options.userName\n          },\n          pubKeyCredParams: [\n            { type: \"public-key\", alg: -7 },  // ECDSA with SHA-256\n          ],\n          authenticatorSelection: options.authenticatorSelection,\n          attestation: \"direct\"\n        };\n      \n        const registration = await navigator.credentials.create({\n          publicKey\n        });\n      \n        return registration;\n      }\n      \n\n    const collectData = async (e) => {\n        e.preventDefault();\n        \n        try {\n          // 1. Send user data to the server to create a user record\n          const userResponse = await axios.post('http://localhost:4000/', {\n            firstName,\n            lastName,\n            age,\n            adharNumber,\n            area,\n            walletAddress // Include wallet address in the post data\n          });\n      \n          // Save the user data in localStorage\n          localStorage.setItem(\"user\", JSON.stringify(userResponse.data));\n      \n          // 2. Initiate WebAuthn registration process\n          const initRegisterResponse = await axios.get(\n            `http://localhost:4000/init-register?adharNumber=${adharNumber}`,  // Updated query parameter\n            { withCredentials: true }\n          );\n      \n          if (!initRegisterResponse.data) {\n            throw new Error('Failed to fetch registration options from the server.');\n          }\n      \n          // 3. Start WebAuthn registration\n          const registrationJSON = await startRegistration(initRegisterResponse.data);\n      \n          // 4. Verify WebAuthn registration with the server\n          const verifyRegisterResponse = await axios.post(\n            'http://localhost:4000/verify-register',\n            registrationJSON,\n            { withCredentials: true }\n          );\n      \n          if (verifyRegisterResponse.data.verified) {\n            setSubmissionSuccess(true);\n            setSubmissionError(null);\n            console.log('Successfully registered user:', verifyRegisterResponse.data);\n          } else {\n            throw new Error('WebAuthn registration verification failed.');\n          }\n        } \n        catch (error) {\n          console.error('Error during registration process:', error);\n          setSubmissionError('Error during registration. Please try again.');\n        }\n      };\n      \n    \n      \n      \n      \n      \n\n    const fetchUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:4000/');\n            setUsers(response.data);\n            setShowUsers(true);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    return (\n        <Container text>\n            <ToastContainer />\n\n            <Button\n                secondary\n                onClick={fetchUsers}\n                style={{\n                    position: 'absolute',\n                    top: '20px',\n                    right: '20px',\n                    zIndex: 1000,\n                }}\n            >\n                Fetch Users\n            </Button>\n            <Header as='h2' textAlign='center' style={{ margin: '20px 0' }}>\n                User Registration\n            </Header>\n            {submissionSuccess && (\n                <Message success header='Submission Successful' content=\"Your data has been captured!\" />\n            )}\n            {submissionError && (\n                <Message error header='Submission Error' content={submissionError} /> \n            )}\n            <Form onSubmit={collectData} size='large'>\n                <Form.Field>\n                    <label>First Name</label>\n                    <input\n                        placeholder='Enter your first name'\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Last Name</label>\n                    <input\n                        placeholder='Enter your last name'\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Age</label>\n                    <input\n                        placeholder='Enter your age'\n                        value={age}\n                        onChange={(e) => setAge(e.target.value)}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Adhar Number</label>\n                    <input\n                        placeholder='Enter your Adhar number'\n                        value={adharNumber}\n                        onChange={(e) => setAdharNumber(e.target.value)}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Select Your Area</label>\n                    <Dropdown\n                        placeholder='Select Area'\n                        fluid\n                        selection\n                        options={areaOptions}\n                        onChange={(e, { value }) => setArea(value)}\n                    />\n                </Form.Field>\n                \n                {/* New MetaMask Wallet Address Field */}\n                <Form.Field>\n                    <label>MetaMask Wallet Address</label>\n                    <input\n                        placeholder='Enter your wallet address'\n                        value={walletAddress}\n                        onChange={(e) => setWalletAddress(e.target.value)}\n                    />\n                </Form.Field>\n\n                <Button primary type='submit' style={{ marginTop: '10px', borderRadius: '20px' }}>\n                    Submit\n                </Button>\n            </Form>\n\n            {showUsers && users.length > 0 && (\n                <Table celled style={{ marginTop: '20px' }}>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>First Name</Table.HeaderCell>\n                            <Table.HeaderCell>Last Name</Table.HeaderCell>\n                            <Table.HeaderCell>Age</Table.HeaderCell>\n                            <Table.HeaderCell>Adhar Number</Table.HeaderCell>\n                            <Table.HeaderCell>Area</Table.HeaderCell>\n                            <Table.HeaderCell>Wallet Address</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {users.map((user) => (\n                            <Table.Row key={user._id}>\n                                <Table.Cell>{user.firstName}</Table.Cell>\n                                <Table.Cell>{user.lastName}</Table.Cell>\n                                <Table.Cell>{user.age}</Table.Cell>\n                                <Table.Cell>{user.adharNumber}</Table.Cell>\n                                <Table.Cell>{user.area}</Table.Cell>\n                                <Table.Cell>{user.walletAddress}</Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table>\n            )}\n        </Container>\n    );\n}\n\nexport default Database;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}