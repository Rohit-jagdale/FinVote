{"ast":null,"code":"/**\n * Convert the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * Helper method to compliment `base64URLStringToBuffer`\n */\nexport function bufferToBase64URLString(buffer) {\n  const bytes = new Uint8Array(buffer);\n  let str = '';\n  for (const charCode of bytes) {\n    str += String.fromCharCode(charCode);\n  }\n  const base64String = btoa(str);\n  return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}","map":{"version":3,"names":["bufferToBase64URLString","buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","base64String","btoa","replace"],"sources":["/Users/rohit/Desktop/projects/FinVote/node_modules/@simplewebauthn/browser/esm/helpers/bufferToBase64URLString.js"],"sourcesContent":["/**\n * Convert the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * Helper method to compliment `base64URLStringToBuffer`\n */\nexport function bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAuBA,CAACC,MAAM,EAAE;EAC5C,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EACpC,IAAIG,GAAG,GAAG,EAAE;EACZ,KAAK,MAAMC,QAAQ,IAAIH,KAAK,EAAE;IAC1BE,GAAG,IAAIE,MAAM,CAACC,YAAY,CAACF,QAAQ,CAAC;EACxC;EACA,MAAMG,YAAY,GAAGC,IAAI,CAACL,GAAG,CAAC;EAC9B,OAAOI,YAAY,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}