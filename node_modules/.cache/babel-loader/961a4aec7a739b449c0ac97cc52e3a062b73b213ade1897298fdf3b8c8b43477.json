{"ast":null,"code":"import { base64URLStringToBuffer } from './base64URLStringToBuffer.js';\nexport function toPublicKeyCredentialDescriptor(descriptor) {\n  const {\n    id\n  } = descriptor;\n  return {\n    ...descriptor,\n    id: base64URLStringToBuffer(id),\n    /**\n     * `descriptor.transports` is an array of our `AuthenticatorTransportFuture` that includes newer\n     * transports that TypeScript's DOM lib is ignorant of. Convince TS that our list of transports\n     * are fine to pass to WebAuthn since browsers will recognize the new value.\n     */\n    transports: descriptor.transports\n  };\n}","map":{"version":3,"names":["base64URLStringToBuffer","toPublicKeyCredentialDescriptor","descriptor","id","transports"],"sources":["/Users/rohit/Desktop/projects/FinVote/node_modules/@simplewebauthn/browser/esm/helpers/toPublicKeyCredentialDescriptor.js"],"sourcesContent":["import { base64URLStringToBuffer } from './base64URLStringToBuffer.js';\nexport function toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        /**\n         * `descriptor.transports` is an array of our `AuthenticatorTransportFuture` that includes newer\n         * transports that TypeScript's DOM lib is ignorant of. Convince TS that our list of transports\n         * are fine to pass to WebAuthn since browsers will recognize the new value.\n         */\n        transports: descriptor.transports,\n    };\n}\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,8BAA8B;AACtE,OAAO,SAASC,+BAA+BA,CAACC,UAAU,EAAE;EACxD,MAAM;IAAEC;EAAG,CAAC,GAAGD,UAAU;EACzB,OAAO;IACH,GAAGA,UAAU;IACbC,EAAE,EAAEH,uBAAuB,CAACG,EAAE,CAAC;IAC/B;AACR;AACA;AACA;AACA;IACQC,UAAU,EAAEF,UAAU,CAACE;EAC3B,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}